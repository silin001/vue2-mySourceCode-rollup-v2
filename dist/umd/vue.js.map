{"version":3,"file":"vue.js","sources":["../../src/utils/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/initState.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 工具类方法\r\n// 当前数据是不是对象 \r\nexport function isObject (data) {\r\n  return typeof data === 'object' && data !== null\r\n}\r\n\r\nexport function def (data, key, value) {\r\n  Object.defineProperty(data, key, {\r\n    enumerable: false, // 不可枚举=>循环\r\n    configurable: false,// 不可修改\r\n    value\r\n  })\r\n}","// 重写数组那些方法， 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\r\n\r\nlet oldArrayMethods = Array.prototype // 保存原理数组的方法\r\n// 用户使用时： value.__proto__ = arraryMethods   ps：原型链查找概念，会向上查找 先查找我重写的，重写的没有 继续向上查找\r\n//arrayMethods.__proto__ = oldArrayMethods\r\nexport const arrayMethods = Object.create(oldArrayMethods)\r\nconst methods = [\r\n  'push',\r\n  'shift',\r\n  'unshift',\r\n  'pop',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n// 循环重写7种数组方法\r\nmethods.forEach((method) => {\r\n  arrayMethods[method] = function (...args) {\r\n    console.log('用户调用了push 参数为:', args) // AOP切片过程\r\n    const result = oldArrayMethods[method].apply(this, args) // 用户调用我们方法-> 我们在调用原生方法， 拿到返回值\r\n    console.log('🚀🚀 ~ file: array.js ~ line 20 ~ methods.forEach ~ result', result)\r\n    // 用户使用 push unshift 操作时 值可能是一个对象 对象数据我们需要继续检测! ⭐\r\n    let inserted // 当前用户插入的元素\r\n    const ob = this.__ob__  // 拿到Observer 类 监控过的对象添加的__ob__ 属性 里面有observerArray等方法\r\n    // console.log('🚀🚀 ~ file: array.js ~ line 23 ~ methods.forEach ~ ob', ob)\r\n    switch (method) {\r\n      case 'push':\r\n        inserted = args\r\n        break;\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice':  // 新增的属性splice有删除，新增功能， arr.splice(0,1,{name:1})\r\n        inserted = args.splice(2)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    console.log(inserted)\r\n    if (inserted) ob.observerArray(inserted) // ⭐ 调用 observerArray 对新增的数据继续 进行监测\r\n    return result\r\n  }\r\n})\r\n","// 对象的数据劫持！\r\n// 把data中的对象数据使用Object.defineProperty 重新定义， es5方法\r\n// 该方法不兼容ie8 及以下， vue2 无法兼容ie8\r\nimport { isObject, def } from '../utils/index'\r\nimport { arrayMethods } from './array'\r\n// ⭐定义响应式数据\r\nfunction defineReactive (data, key, value) {\r\n  observe(value) //⭐ 递归实现深度监测，层次越深越差\r\n  Object.defineProperty(data, key, {\r\n    get () {\r\n      return value\r\n    },\r\n    set (newVal) {\r\n      if (newVal === value) return\r\n      console.log('值改变了')\r\n      observe(newVal)       // ⭐继续劫持用户设置的值，因为有可以用户设置的值为{}\r\n      value = newVal\r\n    }\r\n  })\r\n}\r\n// 观察数据 类\r\nclass Observer {\r\n  constructor(value) {\r\n    // vue如果数据的层次过多 需要递归去解析对象中的属性,依次添加get, set方法\r\n    // BUG 这样写会死循环\r\n    // value.__ob__ = this // ⭐ 这里给每一个监控过的对象新增一个__ob__ 属性，在数组方法重写时需要用到\r\n    // 使用Object.defineProperty 方法去添加\r\n    def(value, '__ob__', this)\r\n    if (Array.isArray(value)) {\r\n      // 如果是数组的话并不会对索引进行观测，因为会导致性能问题\r\n      // 前端开发中很少操作索引，  push unshift unshift\r\n      // 如果数组里放的是对象我在监控\r\n      // console.log(arrayMethods)\r\n      // 2.⭐ 用户可能使用 this.data.arr.push({}) ..等方法 所有要重写这些方法\r\n      value.__proto__ = arrayMethods // 原型添加我们重写的数组方法\r\n      this.observerArray(value) // 1.数组中每一项进行观测\r\n    } else {\r\n      this.walk(value) // 对象的进行观测\r\n\r\n    }\r\n  }\r\n  observerArray (data) {\r\n    for (let index = 0; index < data.length; index++) {\r\n      observe(data[index])\r\n    }\r\n  }\r\n  walk (data) {\r\n    let keys = Object.keys(data) //获取data key值 [name,age,address]\r\n    keys.forEach((key) => {\r\n      defineReactive(data, key, data[key]) // 定义响应式数据\r\n    })\r\n    // for (let index = 0; index < keys.length; index++) {\r\n    //   const key = keys[index]\r\n    //   const value = data[key]\r\n    // defineReactive(data, key, value]) // 定义响应式数据\r\n    // }\r\n  }\r\n}\r\n\r\nexport function observe (data) {\r\n  console.log(data, 'observe')\r\n  const isObj = isObject(data)\r\n  if (!isObj) return\r\n  return new Observer(data)  // 用来观测数据\r\n}","import { observe } from './observe/index'\r\nexport function initState (vm) {\r\n  const opts = vm.$options\r\n  // vue 的数据来源 属性 方法  数据 计算属性 watch\r\n  // console.log(opts)\r\n  if (opts.props) {\r\n    initProps(vm)\r\n  }\r\n  if (opts.methods) {\r\n    initMethods(vm)\r\n  }\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm)\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm)\r\n  }\r\n\r\n}\r\nfunction initProps (vm) {\r\n  // console.log('初始化数据', vm.$options.data)\r\n}\r\nfunction initMethods (vm) {\r\n  // console.log('初始化数据', vm.$options.data)\r\n}\r\nfunction initComputed (vm) {\r\n  // console.log('初始化数据', vm.$options.data)\r\n}\r\nfunction initData (vm) {\r\n  console.log('初始化数据', vm.$options.data)\r\n  // 数据初始化工作\r\n  let data = vm.$options.data\r\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n  // 对象劫持，用户改变数据 我希望可以得到通知-刷新页面\r\n  // mvvm 模式 数据变化可以更新视图\r\n  observe(data) // 响应式原理\r\n}\r\n\r\nfunction initWatch (vm) {\r\n  console.log('初始化数据', vm.$options.data)\r\n}","import { initState } from './initState'\r\n// 在原型上添加一个init方法\r\nexport function initMixin (Vue) {\r\n  // 初始化流程\r\n  Vue.prototype._init = function (options) {\r\n    console.log(options)\r\n    // 1.劫持数据\r\n    const vm = this\r\n    console.log(vm)\r\n    vm.$options = options\r\n    // 初始化状态\r\n    initState(vm)\r\n  }\r\n}","// vue核心 只是vue的一个声明文件\r\nimport { initMixin } from './init'\r\n\r\n\r\nfunction Vue (options) {\r\n  //vue 初始化操作\r\n  this._init(options)\r\n}\r\n// 通过引入文件方式给vue原型添加方法\r\ninitMixin(Vue) // 给vue原型添加_init方法\r\nexport default Vue"],"names":[],"mappings":"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"}